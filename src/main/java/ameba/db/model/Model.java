package ameba.db.model;import ameba.db.DataSource;import org.apache.commons.lang3.NotImplementedException;import javax.persistence.MappedSuperclass;import java.io.Serializable;/** * @author icode */@MappedSuperclasspublic abstract class Model implements Serializable {    protected static <ID, T extends Model> Finder<ID, T> _getFinder(String server) {        throw new NotImplementedException("Model not enhanced!");    }    public static <ID, T extends Model> Finder<ID, T> withFinder(String server) {        Finder<ID, T> finder = _getFinder(server);        if (finder == null) {            throw new NotFinderFindException();        }        return finder;    }    <ID> ID _get_model_id() {        throw new NotImplementedException("Model not enhanced!");    }    <ID> void _set_model_id(ID id) {        throw new NotImplementedException("Model not enhanced!");    }    public static <ID, T extends Model> Finder<ID, T> withFinder() {        return withFinder(DataSource.getDefaultDataSourceName());    }    protected <M extends Model> Persister<M> _getPersister(String server) {        throw new NotImplementedException("Model not enhanced!");    }    public <M extends Model> Persister<M> withPersister(String server) {        Persister<M> persister = _getPersister(server);        if (persister == null) {            throw new NotPersisterFindException();        }        return persister;    }    public <M extends Model> Persister<M> withPersister() {        return withPersister(DataSource.getDefaultDataSourceName());    }    protected static <M extends Model> Updater<M> _getUpdater(String server, String sql) {        throw new NotImplementedException("Model not enhanced!");    }    public static <M extends Model> Updater<M> withUpdater(String server, String sql) {        Updater<M> updater = _getUpdater(server, sql);        if (updater == null) {            throw new NotUpdaterFindException();        }        return updater;    }    public static <M extends Model> Updater<M> withUpdater(String sql) {        return withUpdater(DataSource.getDefaultDataSourceName(), sql);    }    public static class NotPersisterFindException extends RuntimeException {        public NotPersisterFindException() {            super("_getPersister method not return Persister instance");        }    }    public static class NotFinderFindException extends RuntimeException {        public NotFinderFindException() {            super("_getFinder method not return Persister instance");        }    }    public static class NotUpdaterFindException extends RuntimeException {        public NotUpdaterFindException() {            super("_getUpdater method not return Updater instance");        }    }}